package main

import (
	"fmt"
	"log"
	"os"
	"strings"
)

func PrintKeys(outputPath *string, keys map[string][]string, quiet *bool) {
	fd := os.Stdout

	// Open output file if necessary
	if outputPath != nil {
		var err error
		fd, err = os.OpenFile(*outputPath, os.O_WRONLY|os.O_CREATE|os.O_TRUNC, 0600)
		if err != nil {
			log.Fatal(fmt.Sprintf("Failed to open %s\n", *outputPath))
		}
		defer fd.Close()
	}

	// header, written once
	if ! *quiet {
		fmt.Fprintf(fd, "\n########################################################\n")
		fmt.Fprintf(fd, "# Generated by https://github.com/samber/sync-ssh-keys #\n")
		fmt.Fprintf(fd, "########################################################\n\n")
	}

	for s, sshKeys := range keys {
		if len(keys) > 0 {
			if ! *quiet {
				fmt.Fprintf(fd, "#\n# %s\n#\n\n%s\n", s, strings.Join(sshKeys, "\n"))
			} else {
				fmt.Fprintf(fd, strings.Join(sshKeys, "\n"))
			}
		}
	}

	if ! *quiet {
		fmt.Fprintf(fd, "\n# END\n")
	}
}
